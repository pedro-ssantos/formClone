{"version":3,"sources":["logo.svg","Questionario.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","combo","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","FormControl","FormLabel","RadioGroup","aria-label","name","FormControlLabel","value","control","Radio","label","FormGroup","Checkbox","TextField","required","fullWidth","id","autoComplete","autoFocus","Grid","container","item","xs","sm","Button","type","Box","mt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74139061.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { FormControl,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormGroup\n} from '@material-ui/core';\nimport BallotSharp from '@material-ui/icons/BallotSharp';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"#\">\n        Clone Forms\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  combo: {\n    width: '100%', // Fix IE 11 issue\n    \n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <BallotSharp />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          Breafing Completo\n        </Typography>\n        <Typography component=\"subtitle1\" variant=\"subtitle1\">\n         Descrição do formulário\n        </Typography>\n        <form className={classes.form} noValidate>\n          <FormControl component=\"fieldset\" className={classes.combo}>\n              <FormLabel component=\"legend\">1. Qual seu time?</FormLabel>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\">\n                <FormControlLabel value=\"bahia\" control={<Radio />} label=\"Bahia\" />\n                <FormControlLabel value=\"vitoria\" control={<Radio />} label=\"Vitória\" />\n                <FormControlLabel value=\"fluminense\" control={<Radio />} label=\"Fluminense\" />\n                <FormControlLabel value=\"outro\" control={<Radio />} label=\"Outro\" />\n              </RadioGroup>\n            </FormControl>\n            <FormControl component=\"fieldset\" className={classes.combo}>\n                <FormLabel component=\"legend\">2. Quais títulos seu time já ganhou?</FormLabel>\n                <FormGroup>\n                  <FormControlLabel\n                    control={<Checkbox name=\"baiano\" />}\n                    label=\"Baiano\"\n                  />\n                  <FormControlLabel\n                    control={<Checkbox name=\"nordestao\" />}\n                    label=\"Nordestão\"\n                  />\n                  <FormControlLabel\n                    control={<Checkbox name=\"copa\" />}\n                    label=\"Copa do Brasil\"\n                  />\n                  <FormControlLabel\n                    control={<Checkbox name=\"brasileiro\" />}\n                    label=\"Campeonato Brasileiro\"\n                  />\n                </FormGroup>\n              </FormControl>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Qual o maior jogador do seu time?\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />  \n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                \n                fullWidth\n                id=\"firstName\"\n                label=\"Nome\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"                \n                fullWidth\n                id=\"lastName\"\n                label=\"Sobrenome\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={3}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Sobrenome\"\n                label=\"DDD\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Telefone\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n          </Grid>          \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Qual seu email?\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Enviar\n          </Button>          \n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Questionario from './Questionario';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Questionario>\n        \n      </Questionario>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}